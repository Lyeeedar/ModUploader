{"version":3,"file":"index.js","sources":["../../electron/main/index.ts"],"sourcesContent":["import {\r\n  app,\r\n  BrowserWindow,\r\n  ipcMain,\r\n  dialog,\r\n  IpcMainInvokeEvent,\r\n} from 'electron';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport { fileURLToPath } from 'url';\r\nimport {\r\n  ModUploadData,\r\n  WorkshopUploadResult,\r\n  WorkshopItem,\r\n  WorkshopItemsResult,\r\n  ModMetadata,\r\n  ModVisibility,\r\n} from '../../src/types';\r\nimport { init } from 'steamworks.js';\r\nimport type { Client } from 'steamworks.js';\r\n\r\n// Import the enums we need from steamworks.js\r\nconst UserListType = {\r\n  Published: 0,\r\n  VotedOn: 1,\r\n  VotedUp: 2,\r\n  VotedDown: 3,\r\n  Favorited: 4,\r\n  Subscribed: 5,\r\n  UsedOrPlayed: 6,\r\n  Followed: 7,\r\n};\r\n\r\nconst UGCType = {\r\n  Items: 0,\r\n  ItemsMtx: 1,\r\n  ItemsReadyToUse: 2,\r\n  Collections: 3,\r\n  Artwork: 4,\r\n  Videos: 5,\r\n  Screenshots: 6,\r\n  AllGuides: 7,\r\n  WebGuides: 8,\r\n  IntegratedGuides: 9,\r\n  UsableInGame: 10,\r\n  ControllerBindings: 11,\r\n  GameManagedItems: 12,\r\n  All: 13,\r\n};\r\n\r\nconst UserListOrder = {\r\n  CreationOrderAsc: 0,\r\n  CreationOrderDesc: 1,\r\n  TitleAsc: 2,\r\n  LastUpdatedDesc: 3,\r\n  SubscriptionDateDesc: 4,\r\n  VoteScoreDesc: 5,\r\n  ForModeration: 6,\r\n};\r\n\r\nconst enum UgcItemVisibility {\r\n  Public = 0,\r\n  FriendsOnly = 1,\r\n  Private = 2,\r\n  Unlisted = 3,\r\n}\r\n\r\nconst appId = 3992260; // Ascend from Nine Mountains app ID\r\n\r\n// ES module compatibility\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\n\r\nlet mainWindow: BrowserWindow | null = null;\r\nlet steamClient: ReturnType<typeof init> | null = null;\r\nlet steamInitialized = false;\r\n\r\nfunction createWindow(): void {\r\n  mainWindow = new BrowserWindow({\r\n    width: 1200,\r\n    height: 800,\r\n    webPreferences: {\r\n      preload: path.join(__dirname, '..', 'preload', 'index.mjs'),\r\n      contextIsolation: true,\r\n      nodeIntegration: false,\r\n    },\r\n    icon: path.join(__dirname, '..', '..', 'icon.png'),\r\n    backgroundColor: '#0a0604',\r\n    titleBarStyle: 'default',\r\n    frame: true,\r\n    resizable: true,\r\n  });\r\n\r\n  // In development, load from Vite dev server\r\n  if (process.env.VITE_DEV_SERVER_URL) {\r\n    mainWindow.loadURL(process.env.VITE_DEV_SERVER_URL);\r\n    mainWindow.webContents.openDevTools();\r\n  } else {\r\n    // In production, load the built file\r\n    mainWindow.loadFile(path.join(__dirname, '..', 'index.html'));\r\n  }\r\n\r\n  mainWindow.on('closed', () => {\r\n    mainWindow = null;\r\n  });\r\n}\r\n\r\napp.whenReady().then(() => {\r\n  createWindow();\r\n\r\n  // Try to initialize Steamworks after window is created\r\n  setTimeout(() => {\r\n    try {\r\n      // Initialize Steamworks\r\n\r\n      // Create steam_appid.txt file if it doesn't exist\r\n      const steamAppIdPath = path.join(process.cwd(), 'steam_appid.txt');\r\n      try {\r\n        if (!fs.existsSync(steamAppIdPath)) {\r\n          fs.writeFileSync(steamAppIdPath, appId.toString());\r\n          console.log('Created steam_appid.txt file');\r\n        }\r\n      } catch (fileError) {\r\n        console.log('Could not create steam_appid.txt:', fileError);\r\n      }\r\n\r\n      steamClient = init(appId);\r\n\r\n      if (!steamClient) {\r\n        console.log(\r\n          'Steam client not available - Steam may not be running or app not registered',\r\n        );\r\n        console.log(\r\n          'Note: Workshop uploads require Steam to be running and the game to be owned',\r\n        );\r\n      } else {\r\n        console.log('Steamworks initialized successfully');\r\n        console.log('steamClient methods:', Object.keys(steamClient));\r\n        steamInitialized = true;\r\n\r\n        // Notify the renderer that Steam is ready\r\n        if (mainWindow) {\r\n          mainWindow.webContents.send('steam-initialized');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        if (error.message.includes('ConnectToGlobalUser')) {\r\n          console.log(\r\n            'Steam connection failed - make sure Steam is running and you own the game',\r\n          );\r\n          console.log('Workshop functionality will be disabled');\r\n        } else {\r\n          console.log('Steam integration not available:', error.message);\r\n        }\r\n      } else {\r\n        console.log('Steam integration not available:', error);\r\n      }\r\n      // Don't treat this as a fatal error - the app should still work without Steam\r\n    }\r\n  }, 1000);\r\n});\r\n\r\napp.on('window-all-closed', () => {\r\n  if (process.platform !== 'darwin') {\r\n    app.quit();\r\n  }\r\n});\r\n\r\napp.on('activate', () => {\r\n  if (mainWindow === null) {\r\n    createWindow();\r\n  }\r\n});\r\n\r\n// IPC Handlers\r\n\r\nipcMain.handle('select-zip', async (): Promise<string | null> => {\r\n  console.log('select-zip handler called');\r\n\r\n  if (!mainWindow) {\r\n    console.error('No main window available');\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    // Focus the window first\r\n    mainWindow.focus();\r\n\r\n    const result = await dialog.showOpenDialog(mainWindow, {\r\n      properties: ['openFile'],\r\n      filters: [\r\n        { name: 'Zip Files', extensions: ['zip'] },\r\n        { name: 'All Files', extensions: ['*'] },\r\n      ],\r\n    });\r\n\r\n    console.log('Dialog result:', result);\r\n\r\n    if (!result.canceled && result.filePaths.length > 0) {\r\n      console.log('Selected file:', result.filePaths[0]);\r\n      return result.filePaths[0];\r\n    }\r\n\r\n    console.log('No file selected');\r\n    return null;\r\n  } catch (error) {\r\n    console.error('Error showing file dialog:', error);\r\n    throw error;\r\n  }\r\n});\r\n\r\nipcMain.handle('select-preview-image', async (): Promise<string | null> => {\r\n  console.log('select-preview-image handler called');\r\n\r\n  if (!mainWindow) {\r\n    console.error('No main window available');\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    // Focus the window first\r\n    mainWindow.focus();\r\n\r\n    const result = await dialog.showOpenDialog(mainWindow, {\r\n      properties: ['openFile'],\r\n      filters: [\r\n        { name: 'Images', extensions: ['jpg', 'jpeg', 'png', 'gif'] },\r\n        { name: 'All Files', extensions: ['*'] },\r\n      ],\r\n    });\r\n\r\n    console.log('Dialog result:', result);\r\n\r\n    if (!result.canceled && result.filePaths.length > 0) {\r\n      console.log('Selected image:', result.filePaths[0]);\r\n      return result.filePaths[0];\r\n    }\r\n\r\n    console.log('No image selected');\r\n    return null;\r\n  } catch (error) {\r\n    console.error('Error showing image dialog:', error);\r\n    throw error;\r\n  }\r\n});\r\n\r\nconst visibilityToUgcVisibility = (visibility: ModVisibility): number => {\r\n  switch (visibility) {\r\n    case 'public':\r\n      return UgcItemVisibility.Public;\r\n    case 'friends':\r\n      return UgcItemVisibility.FriendsOnly;\r\n    case 'private':\r\n      return UgcItemVisibility.Private;\r\n    case 'unlisted':\r\n      return UgcItemVisibility.Unlisted;\r\n  }\r\n};\r\n\r\n// Removed get-mods-directory handler since we're focusing on Steam Workshop only\r\n\r\nipcMain.handle(\r\n  'upload-to-workshop',\r\n  async (\r\n    _event: IpcMainInvokeEvent,\r\n    modData: ModUploadData,\r\n  ): Promise<WorkshopUploadResult> => {\r\n    if (!steamClient) {\r\n      throw new Error(\r\n        'Steam is not connected. Please make sure Steam is running and you own \"Ascend from Nine Mountains\".',\r\n      );\r\n    }\r\n\r\n    try {\r\n      const {\r\n        zipPath,\r\n        title,\r\n        description,\r\n        tags,\r\n        visibility,\r\n        previewImagePath,\r\n        changeNotes,\r\n      } = modData;\r\n      let { workshopId } = modData;\r\n\r\n      let publishedFileId: string;\r\n\r\n      // Prepare update details for steamworks.js using the proper type\r\n      const updateDetails: Parameters<Client['workshop']['updateItem']>[1] = {};\r\n\r\n      if (title) {\r\n        updateDetails.title = title;\r\n      }\r\n\r\n      if (description) {\r\n        updateDetails.description = description;\r\n      }\r\n\r\n      if (tags) {\r\n        updateDetails.tags = tags\r\n          .split(',')\r\n          .map((t) => t.trim())\r\n          .filter((t) => t.length > 0);\r\n      }\r\n\r\n      updateDetails.visibility = visibilityToUgcVisibility(\r\n        visibility || 'private',\r\n      );\r\n      \r\n      if (zipPath) {\r\n        updateDetails.contentPath = zipPath;\r\n      }\r\n\r\n      if (previewImagePath && fs.existsSync(previewImagePath)) {\r\n        updateDetails.previewPath = previewImagePath;\r\n      }\r\n\r\n      if (changeNotes) {\r\n        updateDetails.changeNote = changeNotes;\r\n      }\r\n\r\n      let ugcResult: { needsToAcceptAgreement: boolean };\r\n\r\n      if (!workshopId) {\r\n        // Create new item first\r\n        console.log('Creating new workshop item...');\r\n        const createResult = await steamClient.workshop.createItem(appId);\r\n\r\n        publishedFileId = createResult.itemId.toString();\r\n        console.log('Workshop item created successfully:', publishedFileId);\r\n\r\n        // Now update the newly created item\r\n        console.log('Updating workshop item with content...');\r\n        ugcResult = await steamClient.workshop.updateItem(\r\n          createResult.itemId,\r\n          updateDetails,\r\n          appId,\r\n        );\r\n      } else {\r\n        // Update existing item\r\n        publishedFileId = workshopId;\r\n        console.log('Updating existing workshop item:', publishedFileId);\r\n        ugcResult = await steamClient.workshop.updateItem(\r\n          BigInt(workshopId),\r\n          updateDetails,\r\n          appId,\r\n        );\r\n      }\r\n\r\n      const result: WorkshopUploadResult = {\r\n        success: true,\r\n        publishedFileId: publishedFileId,\r\n        error: undefined,\r\n      };\r\n\r\n      console.log(\r\n        'Workshop upload completed successfully:',\r\n        result.publishedFileId,\r\n      );\r\n\r\n      // Open workshop page in Steam overlay so user can accept legal agreement and configure item\r\n      try {\r\n        steamClient.overlay.activateToWebPage(\r\n          `steam://url/CommunityFilePage/${publishedFileId}`,\r\n        );\r\n        console.log('Opened Steam Workshop page for item:', publishedFileId);\r\n      } catch (overlayError) {\r\n        console.warn(\r\n          'Could not open Steam overlay to workshop page:',\r\n          overlayError,\r\n        );\r\n      }\r\n\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Workshop upload error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n);\r\n\r\nipcMain.handle('get-workshop-items', async (): Promise<WorkshopItemsResult> => {\r\n  // Check if Steam is available and initialized\r\n  if (!steamClient || !steamInitialized) {\r\n    return {\r\n      items: [],\r\n      status: 'steam_not_connected',\r\n      message: 'Steam is not connected. Please make sure Steam is running.',\r\n    };\r\n  }\r\n\r\n  try {\r\n    const userSteamId = steamClient.localplayer.getSteamId();\r\n\r\n    console.log(userSteamId);\r\n\r\n    const result = await steamClient.workshop.getUserItems(\r\n      1, // page\r\n      userSteamId.accountId,\r\n      UserListType.Published,\r\n      UGCType.Items,\r\n      UserListOrder.CreationOrderDesc,\r\n      appId,\r\n      appId,\r\n    );\r\n\r\n    const items: WorkshopItem[] = result.items\r\n      .filter((item: any) => item != null)\r\n      .map((item: any) => ({\r\n        publishedFileId: item.publishedFileId.toString(),\r\n        title: item.title,\r\n        description: item.description,\r\n        tags: item.tags || [],\r\n        visibility: item.visibility === 0 ? 'public' : 'private',\r\n        createdDate: item.timeCreated,\r\n        updatedDate: item.timeUpdated,\r\n        subscriptions: Number(item.statistics?.numSubscriptions || 0),\r\n        favorited: Number(item.statistics?.numFavorites || 0),\r\n        views: Number(item.statistics?.numUniqueWebsiteViews || 0),\r\n      }));\r\n\r\n    return {\r\n      items,\r\n      status: 'success',\r\n      message:\r\n        items.length === 0\r\n          ? 'No workshop items found. Upload your first mod!'\r\n          : undefined,\r\n    };\r\n  } catch (error) {\r\n    console.error('Workshop API error:', error);\r\n    return {\r\n      items: [],\r\n      status: 'error',\r\n      message:\r\n        'Workshop API is currently unavailable. Upload functionality still works.',\r\n    };\r\n  }\r\n});\r\n"],"names":[],"mappings":"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"}